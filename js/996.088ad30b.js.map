{"version":3,"file":"js/996.088ad30b.js","mappings":"6MAGA,MAAMA,EAAa,CAAEC,MAAO,kBACtBC,EAAa,CAAED,MAAO,cCmDtBE,EAAa,ssDA8DbC,EAAiB,sKDzCvB,OAA4BC,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,SACRC,KAAAA,CAAMC,GCzCR,MAAMC,GAAaC,EAAAA,EAAAA,IAAI,SAEvBC,EAAAA,EAAAA,KAAU,KACRC,IAAAA,cAAoB,IAGtB,MAAMC,EAAkBC,UACtB,UACQC,UAAUC,UAAUC,UAAUd,GACpCM,EAAWS,MAAQ,UACnBC,YAAW,KACTV,EAAWS,MAAQ,MAAM,GACxB,K,CACH,MAAOE,GACPC,QAAQC,MAAM,mBAAoBF,E,GDgDtC,MAAO,CAACG,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO1B,EAAY,EAC3D2B,EAAAA,EAAAA,IAAoB,SAAU,CAC5B1B,MAAO,YACP2B,QAASJ,EAAO,KAAOA,EAAO,GAAMK,GAAiBN,EAAKO,MAAM,WAC/D,KACHN,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,qBAAsB,IAChFH,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,IAAK,CACjDI,KAAM,qDACNC,OAAQ,UACP,gBAAiB,IACpBR,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,IAAK,KAAM,EACvDA,EAAAA,EAAAA,IAAoB,SAAU,KAAM,QACpCM,EAAAA,EAAAA,IAAiB,2DACf,IACJT,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,cAAe,KACzEA,EAAAA,EAAAA,IAAoB,MAAOzB,EAAY,CACrCsB,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,YAC3CN,EAAAA,EAAAA,IAAoB,SAAU,CAC5B1B,MAAO,WACP2B,QAASf,IACRqB,EAAAA,EAAAA,IAAiBzB,EAAWS,OAAQ,GACvCM,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,cAC3CN,EAAAA,EAAAA,IAAoB,OAAQ,CAAE1B,MAAO,wBAAyBiC,EAAAA,EAAAA,IAAiB/B,IAC/EqB,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,aAE7CT,EAAO,MAAQA,EAAO,KAAMG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,cAAe,KAC3EA,EAAAA,EAAAA,IAAoB,MAAO,CAAE1B,MAAO,cAAgB,CAClDuB,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,YAC3CN,EAAAA,EAAAA,IAAoB,OAAQ,CAAE1B,MAAO,wBAAyBiC,EAAAA,EAAAA,IAAiB9B,IAC/EoB,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,eAIjD,I,UE/HA,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://leetcode/./src/components/problems/TwoSum.vue?0c20","webpack://leetcode/./src/components/problems/TwoSum.vue","webpack://leetcode/./src/components/problems/TwoSum.vue?7204"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"problem-detail\" }\nconst _hoisted_2 = { class: \"code-block\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport Prism from 'prismjs';\r\n\r\nconst codeString = `\r\n/*\r\n  Method 1: Brute Force\r\n  Time complexity o(n(n-1)/2) == o(n^2)\r\n  Space complexity o(1)\r\n*/\r\nconst twoSumBruteForce = (nums: number[], target: number): number[] => {\r\n for (let i = 0; i < nums.length; i++) {\r\n   for (let j = i + 1; j < nums.length; j++) {\r\n    let sum = nums[i] + nums[j];\r\n    if (target === sum) return [i, j];\r\n   }\r\n }\r\n};\r\n\r\n/*\r\n  Method 2: HashMap\r\n  Time complexity o(n)\r\n  Space complexity o(n)\r\n*/\r\nconst twoSumHashMap = (nums: number[], target: number): number[] => {\r\n  const recordMap = new Map<number, number>();\r\n  for (let i = 0; i < nums.length; i++) {\r\n    const complement: number = target - nums[i];\r\n    if (recordMap.has(complement)) {\r\n      return [recordMap.get(complement), i];\r\n    }\r\n    recordMap.set(nums[i], i);\r\n    // console.log({recordMap})\r\n  }\r\n}\r\n\r\n/*\r\n  Method 3: Functional Programming (Reduce)\r\n  Time complexity o(n)\r\n  Space complexity o(n)\r\n*/\r\nconst twoSumReduce = (nums: number[], target: number): number[] => {\r\n  // array.reduce((accumulator, currentValue(key), currentIndex?(value), array?) => { ... }, initialValue);\r\n  const result = nums.reduce(\r\n    (acc: { map: Map<number, number>, found: boolean, indices: number[] }, num: number, index: number) => {\r\n      if (acc.found) return acc; // 若找到則停止\r\n      const complement: number = target - num;\r\n\r\n      if (acc.map.has(complement)) {\r\n        return {\r\n          ...acc,\r\n          found: true,\r\n          indices: [acc.map.get(complement)!, index], // 使用 ! 表示非空斷言 一定不是 null 或 undefined\r\n        };\r\n      }\r\n      return {\r\n        ...acc,\r\n        map: acc.map.set(num, index),\r\n      };\r\n    },\r\n    { map: new Map<number, number>(), found: false, indices: [] }\r\n  );\r\n  return result.indices;\r\n};\r\n`;\r\n\r\nconst testCodeString = `\r\nconsole.log(twoSumBruteForce([2, 7, 11, 15], 9)); // [0, 1]\r\nconsole.log(twoSumHashMap([3, 2, 4], 6)); // [1, 2]\r\nconsole.log(twoSumReduce([3, 3], 6)); // [0, 1]`;\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'TwoSum',\n  setup(__props) {\n\r\nconst buttonText = ref('Copy')\r\n\r\nonMounted(() => {\r\n  Prism.highlightAll(); // 啟用語法高亮\r\n});\r\n\r\nconst copyToClipboard = async () => {\r\n  try {\r\n    await navigator.clipboard.writeText(codeString);\r\n    buttonText.value = \"Copied!\";\r\n    setTimeout(() => {\r\n      buttonText.value = \"Copy\";\r\n    }, 1500);\r\n  } catch (err) {\r\n    console.error(\"Failed to copy: \", err);\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      class: \"close-btn\",\n      onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('close')))\n    }, \"×\"),\n    _cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"1__Two Sum (easy)\", -1)),\n    _cache[7] || (_cache[7] = _createElementVNode(\"a\", {\n      href: \"https://leetcode.com/problems/two-sum/description/\",\n      target: \"_blank\"\n    }, \" leetcode_1 \", -1)),\n    _cache[8] || (_cache[8] = _createElementVNode(\"p\", null, [\n      _createElementVNode(\"strong\", null, \"問題:\"),\n      _createTextVNode(\" 給定一個整數陣列 nums 和一個目標值 target， 請找出並返回兩個數字，使它們的和等於目標值。 \")\n    ], -1)),\n    _cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"-- 我的解答 --\", -1)),\n    _createElementVNode(\"pre\", _hoisted_2, [\n      _cache[1] || (_cache[1] = _createTextVNode(\"      \")),\n      _createElementVNode(\"button\", {\n        class: \"copy-btn\",\n        onClick: copyToClipboard\n      }, _toDisplayString(buttonText.value), 1),\n      _cache[2] || (_cache[2] = _createTextVNode(\"\\n      \")),\n      _createElementVNode(\"code\", { class: \"language-javascript\" }, _toDisplayString(codeString)),\n      _cache[3] || (_cache[3] = _createTextVNode(\"\\n    \"))\n    ]),\n    _cache[10] || (_cache[10] = _createElementVNode(\"h3\", null, \"-- 測試用例 --\", -1)),\n    _createElementVNode(\"pre\", { class: \"test-block\" }, [\n      _cache[4] || (_cache[4] = _createTextVNode(\"      \")),\n      _createElementVNode(\"code\", { class: \"language-javascript\" }, _toDisplayString(testCodeString)),\n      _cache[5] || (_cache[5] = _createTextVNode(\"\\n    \"))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"problem-detail\">\r\n    <!-- 關閉按鈕 -->\r\n    <button class=\"close-btn\" @click=\"$emit('close')\">&times;</button>\r\n\r\n    <!-- 題目標題 -->\r\n    <h2>1__Two Sum (easy)</h2>\r\n    <a href=\"https://leetcode.com/problems/two-sum/description/\" target=\"_blank\">\r\n      leetcode_1\r\n    </a>\r\n\r\n    <!-- 題目敘述 -->\r\n    <p>\r\n      <strong>問題:</strong>\r\n      給定一個整數陣列 nums 和一個目標值 target，\r\n      請找出並返回兩個數字，使它們的和等於目標值。\r\n    </p>\r\n\r\n    <!-- 我的解答 -->\r\n    <h3>-- 我的解答 --</h3>\r\n    <pre class=\"code-block\">\r\n      <button class=\"copy-btn\" @click=\"copyToClipboard\">{{ buttonText }}</button>\r\n      <code class=\"language-javascript\">{{ codeString }}</code>\r\n    </pre>\r\n\r\n    <!-- 測試用例 -->\r\n    <h3>-- 測試用例 --</h3>\r\n    <pre class=\"test-block\">\r\n      <code class=\"language-javascript\">{{ testCodeString }}</code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Prism from 'prismjs';\r\n\r\nconst buttonText = ref('Copy')\r\n\r\nonMounted(() => {\r\n  Prism.highlightAll(); // 啟用語法高亮\r\n});\r\n\r\nconst copyToClipboard = async () => {\r\n  try {\r\n    await navigator.clipboard.writeText(codeString);\r\n    buttonText.value = \"Copied!\";\r\n    setTimeout(() => {\r\n      buttonText.value = \"Copy\";\r\n    }, 1500);\r\n  } catch (err) {\r\n    console.error(\"Failed to copy: \", err);\r\n  }\r\n};\r\n\r\nconst codeString = `\r\n/*\r\n  Method 1: Brute Force\r\n  Time complexity o(n(n-1)/2) == o(n^2)\r\n  Space complexity o(1)\r\n*/\r\nconst twoSumBruteForce = (nums: number[], target: number): number[] => {\r\n for (let i = 0; i < nums.length; i++) {\r\n   for (let j = i + 1; j < nums.length; j++) {\r\n    let sum = nums[i] + nums[j];\r\n    if (target === sum) return [i, j];\r\n   }\r\n }\r\n};\r\n\r\n/*\r\n  Method 2: HashMap\r\n  Time complexity o(n)\r\n  Space complexity o(n)\r\n*/\r\nconst twoSumHashMap = (nums: number[], target: number): number[] => {\r\n  const recordMap = new Map<number, number>();\r\n  for (let i = 0; i < nums.length; i++) {\r\n    const complement: number = target - nums[i];\r\n    if (recordMap.has(complement)) {\r\n      return [recordMap.get(complement), i];\r\n    }\r\n    recordMap.set(nums[i], i);\r\n    // console.log({recordMap})\r\n  }\r\n}\r\n\r\n/*\r\n  Method 3: Functional Programming (Reduce)\r\n  Time complexity o(n)\r\n  Space complexity o(n)\r\n*/\r\nconst twoSumReduce = (nums: number[], target: number): number[] => {\r\n  // array.reduce((accumulator, currentValue(key), currentIndex?(value), array?) => { ... }, initialValue);\r\n  const result = nums.reduce(\r\n    (acc: { map: Map<number, number>, found: boolean, indices: number[] }, num: number, index: number) => {\r\n      if (acc.found) return acc; // 若找到則停止\r\n      const complement: number = target - num;\r\n\r\n      if (acc.map.has(complement)) {\r\n        return {\r\n          ...acc,\r\n          found: true,\r\n          indices: [acc.map.get(complement)!, index], // 使用 ! 表示非空斷言 一定不是 null 或 undefined\r\n        };\r\n      }\r\n      return {\r\n        ...acc,\r\n        map: acc.map.set(num, index),\r\n      };\r\n    },\r\n    { map: new Map<number, number>(), found: false, indices: [] }\r\n  );\r\n  return result.indices;\r\n};\r\n`;\r\n\r\nconst testCodeString = `\r\nconsole.log(twoSumBruteForce([2, 7, 11, 15], 9)); // [0, 1]\r\nconsole.log(twoSumHashMap([3, 2, 4], 6)); // [1, 2]\r\nconsole.log(twoSumReduce([3, 3], 6)); // [0, 1]`;\r\n</script>\r\n\r\n<style scoped>\r\n.problem-detail {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgb(65, 64, 64);\r\n  padding: 24px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);\r\n  width: 70%;\r\n  max-width: 90%;\r\n  color: #f1f1f1;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  overflow-y: auto;\r\n  max-height: 90vh;\r\n}\r\n\r\nh2 {\r\n  font-size: 20px;\r\n  margin-bottom: 0px;\r\n  color: green;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  margin: 10px;\r\n}\r\n\r\nh3 {\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n  color: #ff9900;\r\n}\r\n\r\na {\r\n  color: #ff9900;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  transition: color 0.3s ease, text-shadow 0.3s ease;\r\n}\r\n\r\na:hover {\r\n  color: #ffcc00;\r\n  text-shadow: 0 0 8px #ffcc00;\r\n}\r\n\r\na:active {\r\n  color: #ffaa00;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 28px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  color: #ff5555;\r\n  transition: transform 0.2s ease, color 0.2s ease;\r\n}\r\n\r\n.close-btn:hover {\r\n  color: #ff0000;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.code-block {\r\n  border-radius: 10px;\r\n  white-space: pre-wrap;\r\n  font-family: 'Courier New', monospace;\r\n  /* font-family: 'Fira Code', 'Courier New', monospace; */\r\n  max-height: 500px; /* 限制程式碼區塊高度 */\r\n  color: #f8f8f2;\r\n  font-size: 14px;\r\n  overflow-x: auto; /* 水平滾軸 */\r\n  overflow-y: auto; /* 垂直滾軸 */\r\n  border: 1px solid #444;\r\n  text-align: left; /* 確保程式碼區塊靠左對齊 */\r\n}\r\n\r\n/* 美化 code-block 滾動條 */\r\n.code-block::-webkit-scrollbar {\r\n  width: 6px; /* 控制滾動條寬度 */\r\n  height: 6px; /* 控制水平滾動條寬度 */\r\n}\r\n\r\n.code-block::-webkit-scrollbar-track {\r\n  background: #1e1e2f; /* 滾動條背景色 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.code-block::-webkit-scrollbar-thumb {\r\n  background: #ff9900; /* 滾動條滑塊顏色 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.code-block::-webkit-scrollbar-thumb:hover {\r\n  background: #ffcc00; /* 滑鼠懸停時變亮 */\r\n}\r\n\r\n.test-block {\r\n  border-radius: 10px;\r\n  white-space: pre-wrap;\r\n  font-family: 'Courier New', monospace;\r\n  /* font-family: 'Fira Code', 'Courier New', monospace; */\r\n  max-height: 100px; /* 限制程式碼區塊高度 */\r\n  color: #f8f8f2;\r\n  font-size: 14px;\r\n  overflow-x: auto; /* 水平滾軸 */\r\n  overflow-y: auto; /* 垂直滾軸 */\r\n  border: 1px solid #444;\r\n  text-align: left; /* 確保程式碼區塊靠左對齊 */\r\n}\r\n\r\n/* 美化化滾動條樣式 */\r\n.test-block::-webkit-scrollbar {\r\n  width: 9px;\r\n  height: 9px;\r\n}\r\n\r\n.test-block::-webkit-scrollbar-track {\r\n  background: #1e1e2f;\r\n  border-radius: 10px;\r\n}\r\n\r\n.test-block::-webkit-scrollbar-thumb {\r\n  background: #1a6cb9;\r\n  border-radius: 10px;\r\n  border: 2px solid #1e1e2f;\r\n}\r\n\r\n.test-block::-webkit-scrollbar-thumb:hover {\r\n  background: #11d3e0;\r\n}\r\n\r\npre {\r\n  margin: 0;\r\n  text-align: left; /* 確保 pre 區塊內的文字靠左對齊 */\r\n}\r\n\r\nbutton {\r\n  outline: none;\r\n}\r\n\r\n.copy-btn {\r\n  position: relative;\r\n  float: right;\r\n  padding: 5px 10px;\r\n  background-color: #29b6f6;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  /* display: none; */\r\n}\r\n\r\n.copy-btn:hover{\r\n  background-color: #1e88e5;\r\n  animation: shake 500ms;\r\n}\r\n\r\n@keyframes shake {\r\n    0% { rotate: 0deg; }\r\n    30% { rotate: 17deg; }\r\n    60% { rotate: -17deg; }\r\n    100% { rotate: 0deg; }\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .problem-detail {\r\n    width: 95%;\r\n    padding: 16px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .close-btn {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .code-block {\r\n    font-size: 12px;\r\n    max-height: 300px; /* 限制程式碼區塊高度 */\r\n  }\r\n  .test-block {\r\n    font-size: 12px;\r\n  } \r\n}\r\n</style>\r\n","import script from \"./TwoSum.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./TwoSum.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./TwoSum.vue?vue&type=style&index=0&id=31d2eb0b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-31d2eb0b\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","codeString","testCodeString","_defineComponent","__name","setup","__props","buttonText","ref","onMounted","Prism","copyToClipboard","async","navigator","clipboard","writeText","value","setTimeout","err","console","error","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","onClick","$event","$emit","href","target","_createTextVNode","_toDisplayString","__exports__"],"sourceRoot":""}