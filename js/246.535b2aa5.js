"use strict";(self["webpackChunkleetcode"]=self["webpackChunkleetcode"]||[]).push([[246],{4246:function(n,e,t){t.r(e),t.d(e,{default:function(){return f}});var r=t(641),a=t(33),l=t(953),o=t(8848),i=t.n(o);const c={class:"problem-detail"},u={key:0},s="\n/*\n  Method 1: Iterative Approach (Declarative)\n  Time complexity: O(logn)\n  Space complexity: O(1)\n*/\nfunction binarySearch(nums: number[], target: number): number {\n    let left = 0;\n    let right = nums.length - 1;\n\n    while (left <= right) {\n        const mid = Math.floor((left + right) / 2);\n\n        if (nums[mid] === target) {\n            return mid;\n        } else if (nums[mid] < target) {\n            left = mid + 1;\n        } else {\n            right = mid - 1;\n        }\n    }\n\n    return -1; // Target not found\n}\n\n/*\n  Method 2 (Functional Programming)\n  Time complexity: O(log n)\n  Space complexity: O(log n) (due to recursion stack)\n*/\nfunction binarySearchFP(nums: number[], target: number, left: number = 0, right: number = nums.length - 1): number {\n    // Base case: if the range is invalid, the target is not found\n    if (left > right) {\n        return -1;\n    }\n\n    // Calculate the middle index\n    const mid = Math.floor((left + right) / 2);\n\n    // Check the mid element\n    if (nums[mid] === target) {\n        return mid; // Target found\n    } else if (nums[mid] < target) {\n        // Search in the right half\n        return binarySearchFP(nums, target, mid + 1, right);\n    } else {\n        // Search in the left half\n        return binarySearchFP(nums, target, left, mid - 1);\n    }\n}\n",m="\nconst nums1 = [-1, 0, 3, 5, 9, 12];\nconst target1 = 9;\nconsole.log(binarySearch(nums1, target1)); // Output: 4\n\nconst nums2 = [-1, 0, 3, 5, 9, 12];\nconst target2 = 2;\nconsole.log(binarySearch(nums2, target2)); // Output: -1\n\n// Functional Programming version\nconst nums1 = [-1, 0, 3, 5, 9, 12];\nconst target1 = 9;\nconsole.log(binarySearchFP(nums1, target1)); // Output: 4\n\nconst nums2 = [-1, 0, 3, 5, 9, 12];\nconst target2 = 2;\nconsole.log(binarySearchFP(nums2, target2)); // Output: -1";var g=(0,r.pM)({__name:"BinarySearch",setup(n){(0,r.sV)((()=>{i().highlightAll()}));const e=(0,l.KR)(!1),t=()=>{e.value=!e.value};return(n,l)=>((0,r.uX)(),(0,r.CE)("div",c,[(0,r.Lk)("button",{class:"close-btn",onClick:l[0]||(l[0]=e=>n.$emit("close"))},"×"),l[6]||(l[6]=(0,r.Lk)("h2",null,"704_Binary Search",-1)),l[7]||(l[7]=(0,r.Lk)("a",{href:"https://leetcode.com/problems/binary-search/description/",target:"_blank"}," leetcode_704 ",-1)),l[8]||(l[8]=(0,r.Lk)("p",null,[(0,r.Lk)("strong",null,"問題:")],-1)),e.value?((0,r.uX)(),(0,r.CE)("div",u,l[1]||(l[1]=[(0,r.Lk)("p",null," 給定... ",-1)]))):(0,r.Q3)("",!0),(0,r.Lk)("button",{id:"toggleShowMoreButton",onClick:t},(0,a.v_)(e.value?"(Hide)":"Click to Show More ↓"),1),l[9]||(l[9]=(0,r.Lk)("h3",null,"-- 我的解答 --",-1)),(0,r.Lk)("pre",{class:"code-block"},[l[2]||(l[2]=(0,r.eW)("      ")),(0,r.Lk)("code",{class:"language-javascript"},(0,a.v_)(s)),l[3]||(l[3]=(0,r.eW)("\n    "))]),l[10]||(l[10]=(0,r.Lk)("h3",null,"-- 測試用例 --",-1)),(0,r.Lk)("pre",{class:"test-block"},[l[4]||(l[4]=(0,r.eW)("      ")),(0,r.Lk)("code",{class:"language-javascript"},(0,a.v_)(m)),l[5]||(l[5]=(0,r.eW)("\n    "))])]))}}),h=t(6262);const d=(0,h.A)(g,[["__scopeId","data-v-8de02912"]]);var f=d}}]);
//# sourceMappingURL=246.535b2aa5.js.map