{"version":3,"file":"js/608.332c246a.js","mappings":"6MAGA,MAAMA,EAAa,CAAEC,MAAO,kBACtBC,EAAa,CAAED,MAAO,cACtBE,EAAa,CAAEF,MAAO,uBACtBG,EAAa,CAAEH,MAAO,cACtBI,EAAa,CAAEJ,MAAO,uBAM5B,OAA4BK,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,qBACRC,KAAAA,CAAMC,ICoBRC,EAAAA,EAAAA,KAAU,KACRC,IAAAA,cAAoB,IAGtB,MAAMC,GAAaC,EAAAA,EAAAA,IAAI,2oCAgDjBC,GAAiBD,EAAAA,EAAAA,IAAI,uKDZ3B,MAAO,CAACE,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOlB,EAAY,EAC3DmB,EAAAA,EAAAA,IAAoB,SAAU,CAC5BlB,MAAO,YACPmB,QAASJ,EAAO,KAAOA,EAAO,GAAMK,GAAiBN,EAAKO,MAAM,WAC/D,KACHN,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,uBAAwB,IAClFH,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,IAAK,KAAM,EACvDA,EAAAA,EAAAA,IAAoB,SAAU,KAAM,QACpCI,EAAAA,EAAAA,IAAiB,mGACf,IACJP,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,IAAK,KAAM,oCAAqC,IAC9FH,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,cAAe,KACzEA,EAAAA,EAAAA,IAAoB,MAAOjB,EAAY,CACrCc,EAAO,KAAOA,EAAO,IAAKO,EAAAA,EAAAA,IAAiB,YAC3CJ,EAAAA,EAAAA,IAAoB,OAAQhB,GAAYqB,EAAAA,EAAAA,IAAiBZ,EAAWa,OAAQ,GAC5ET,EAAO,KAAOA,EAAO,IAAKO,EAAAA,EAAAA,IAAiB,aAE7CP,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,cAAe,KACzEA,EAAAA,EAAAA,IAAoB,MAAOf,EAAY,CACrCY,EAAO,KAAOA,EAAO,IAAKO,EAAAA,EAAAA,IAAiB,YAC3CJ,EAAAA,EAAAA,IAAoB,OAAQd,GAAYmB,EAAAA,EAAAA,IAAiBV,EAAeW,OAAQ,GAChFT,EAAO,KAAOA,EAAO,IAAKO,EAAAA,EAAAA,IAAiB,eAIjD,I,UE/FA,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://leetcode/./src/components/problems/FibonacciSequences.vue?a6e9","webpack://leetcode/./src/components/problems/FibonacciSequences.vue","webpack://leetcode/./src/components/problems/FibonacciSequences.vue?0c62"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"problem-detail\" }\nconst _hoisted_2 = { class: \"code-block\" }\nconst _hoisted_3 = { class: \"language-javascript\" }\nconst _hoisted_4 = { class: \"code-block\" }\nconst _hoisted_5 = { class: \"language-javascript\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport Prism from 'prismjs';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'FibonacciSequences',\n  setup(__props) {\n\r\nonMounted(() => {\r\n  Prism.highlightAll(); // 啟用語法高亮\r\n});\r\n\r\nconst codeString = ref(`\r\n/*\r\n  Method 1: Recursive\r\n  Time complexity O(2^n) \r\n  Space complexity O(n)\r\n*/\r\nconst getFibonacciRecursive = (num: number): number => {\r\n    if (num === 0 || num === 1) return num;\r\n    return getFibonacciRecursive(num - 1) + getFibonacciRecursive(num - 2);\r\n};\r\n\r\n/*\r\n  Method 2: Iterative \r\n  Time complexity O(n) \r\n  Space complexity O(1)\r\n*/\r\nconst getFibonacciIterative = (num: number): number => {\r\n  if (num <= 1) return num;\r\n\r\n  let previous = 0, current = 1;\r\n  let next = 0;\r\n\r\n  for (let i = 2; i <= num; i++) {\r\n    next = previous + current;\r\n    previous = current;\r\n    current = next;\r\n  }\r\n\r\n  return current;\r\n\r\n/*\r\n  Method 3: Memoization (Dynamic Programming: Top-Down)\r\n  Time complexity O(n)\r\n  Space complexity O(n)\r\n*/\r\nconst getFibonacciMemoization = (num: number): number => {\r\n    // const memo: number[] = Array.from({ length: num + 1 }, () => -1);\r\n  const memo: number[] = Array(num + 1).fill(-1);\r\n  const helper = (n: number): number => {\r\n    if (n === 0 || n === 1) return n;\r\n    if (memo[n] !== -1) return memo[n];\r\n    memo[n] = helper(n - 1) + helper(n - 2);\r\n    return memo[n];\r\n  };\r\n  return helper(num);\r\n};\r\n`);\r\n\r\nconst testCodeString = ref(`\r\nconsole.log(getFibonacciRecursive(4)); // Output: 3\r\nconsole.log(getFibonacciIterative(4)); // Output: 3\r\nconsole.log(getFibonacciMemoization(4)); // Output: 3\r\n`);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      class: \"close-btn\",\n      onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('close')))\n    }, \"×\"),\n    _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Fibonacci Sequences\", -1)),\n    _cache[6] || (_cache[6] = _createElementVNode(\"p\", null, [\n      _createElementVNode(\"strong\", null, \"問題:\"),\n      _createTextVNode(\" 費氏數列是一個數列，其中每個數字都是前兩個數字的和。 數列的起始值通常為 0 和 1，因此費氏數列的前幾個數字為： 0, 1, 1, 2, 3, 5, 8, 13, 21, ...。 \")\n    ], -1)),\n    _cache[7] || (_cache[7] = _createElementVNode(\"p\", null, \"撰寫一個函式，接收一個整數 n，並返回費氏數列中第 n 個數字。\", -1)),\n    _cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"-- 我的解答 --\", -1)),\n    _createElementVNode(\"pre\", _hoisted_2, [\n      _cache[1] || (_cache[1] = _createTextVNode(\"      \")),\n      _createElementVNode(\"code\", _hoisted_3, _toDisplayString(codeString.value), 1),\n      _cache[2] || (_cache[2] = _createTextVNode(\"\\n    \"))\n    ]),\n    _cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"-- 測試用例 --\", -1)),\n    _createElementVNode(\"pre\", _hoisted_4, [\n      _cache[3] || (_cache[3] = _createTextVNode(\"      \")),\n      _createElementVNode(\"code\", _hoisted_5, _toDisplayString(testCodeString.value), 1),\n      _cache[4] || (_cache[4] = _createTextVNode(\"\\n    \"))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"problem-detail\">\r\n    <!-- 關閉按鈕 -->\r\n    <button class=\"close-btn\" @click=\"$emit('close')\">&times;</button>\r\n\r\n    <!-- 題目標題 -->\r\n    <h2>Fibonacci Sequences</h2>\r\n\r\n    <!-- 題目敘述 -->\r\n    <p>\r\n      <strong>問題:</strong>\r\n      費氏數列是一個數列，其中每個數字都是前兩個數字的和。\r\n      數列的起始值通常為 0 和 1，因此費氏數列的前幾個數字為：\r\n      0, 1, 1, 2, 3, 5, 8, 13, 21, ...。\r\n    </p>\r\n    <p>撰寫一個函式，接收一個整數 n，並返回費氏數列中第 n 個數字。</p>\r\n\r\n    <!-- 我的解答 -->\r\n    <h3>-- 我的解答 --</h3>\r\n    <pre class=\"code-block\">\r\n      <code class=\"language-javascript\">{{ codeString }}</code>\r\n    </pre>\r\n\r\n    <!-- 測試用例 -->\r\n    <h3>-- 測試用例 --</h3>\r\n    <pre class=\"code-block\">\r\n      <code class=\"language-javascript\">{{ testCodeString }}</code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Prism from 'prismjs';\r\n\r\nonMounted(() => {\r\n  Prism.highlightAll(); // 啟用語法高亮\r\n});\r\n\r\nconst codeString = ref(`\r\n/*\r\n  Method 1: Recursive\r\n  Time complexity O(2^n) \r\n  Space complexity O(n)\r\n*/\r\nconst getFibonacciRecursive = (num: number): number => {\r\n    if (num === 0 || num === 1) return num;\r\n    return getFibonacciRecursive(num - 1) + getFibonacciRecursive(num - 2);\r\n};\r\n\r\n/*\r\n  Method 2: Iterative \r\n  Time complexity O(n) \r\n  Space complexity O(1)\r\n*/\r\nconst getFibonacciIterative = (num: number): number => {\r\n  if (num <= 1) return num;\r\n\r\n  let previous = 0, current = 1;\r\n  let next = 0;\r\n\r\n  for (let i = 2; i <= num; i++) {\r\n    next = previous + current;\r\n    previous = current;\r\n    current = next;\r\n  }\r\n\r\n  return current;\r\n\r\n/*\r\n  Method 3: Memoization (Dynamic Programming: Top-Down)\r\n  Time complexity O(n)\r\n  Space complexity O(n)\r\n*/\r\nconst getFibonacciMemoization = (num: number): number => {\r\n    // const memo: number[] = Array.from({ length: num + 1 }, () => -1);\r\n  const memo: number[] = Array(num + 1).fill(-1);\r\n  const helper = (n: number): number => {\r\n    if (n === 0 || n === 1) return n;\r\n    if (memo[n] !== -1) return memo[n];\r\n    memo[n] = helper(n - 1) + helper(n - 2);\r\n    return memo[n];\r\n  };\r\n  return helper(num);\r\n};\r\n`);\r\n\r\nconst testCodeString = ref(`\r\nconsole.log(getFibonacciRecursive(4)); // Output: 3\r\nconsole.log(getFibonacciIterative(4)); // Output: 3\r\nconsole.log(getFibonacciMemoization(4)); // Output: 3\r\n`);\r\n</script>\r\n\r\n<style scoped>\r\n.problem-detail {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgb(65, 64, 64);\r\n  padding: 24px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);\r\n  width: 70%;\r\n  max-width: 90%;\r\n  color: #f1f1f1;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  overflow-y: auto;\r\n  max-height: 90vh;\r\n}\r\n\r\nh2 {\r\n  font-size: 20px;\r\n  margin-bottom: 0px;\r\n  color: green;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  margin: 10px;\r\n}\r\n\r\nh3 {\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n  color: #ff9900;\r\n}\r\n\r\na {\r\n  color: #ff9900;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  transition: color 0.3s ease, text-shadow 0.3s ease;\r\n}\r\n\r\na:hover {\r\n  color: #ffcc00;\r\n  text-shadow: 0 0 8px #ffcc00;\r\n}\r\n\r\na:active {\r\n  color: #ffaa00;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 28px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  color: #ff5555;\r\n  transition: transform 0.2s ease, color 0.2s ease;\r\n}\r\n\r\n.close-btn:hover {\r\n  color: #ff0000;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.code-block {\r\n  border-radius: 10px;\r\n  white-space: pre-wrap;\r\n  font-family: 'Courier New', monospace;\r\n  /* font-family: 'Fira Code', 'Courier New', monospace; */\r\n  max-height: 500px; /* 限制程式碼區塊高度 */\r\n  color: #f8f8f2;\r\n  font-size: 14px;\r\n  overflow-x: auto; /* 水平滾軸 */\r\n  overflow-y: auto; /* 垂直滾軸 */\r\n  border: 1px solid #444;\r\n  text-align: left; /* 確保程式碼區塊靠左對齊 */\r\n}\r\n\r\n/* 美化 code-block 滾動條 */\r\n.code-block::-webkit-scrollbar {\r\n  width: 6px; /* 控制滾動條寬度 */\r\n  height: 6px; /* 控制水平滾動條寬度 */\r\n}\r\n\r\n.code-block::-webkit-scrollbar-track {\r\n  background: #1e1e2f; /* 滾動條背景色 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.code-block::-webkit-scrollbar-thumb {\r\n  background: #ff9900; /* 滾動條滑塊顏色 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.code-block::-webkit-scrollbar-thumb:hover {\r\n  background: #ffcc00; /* 滑鼠懸停時變亮 */\r\n}\r\n\r\npre {\r\n  margin: 0;\r\n  text-align: left; /* 確保 pre 區塊內的文字靠左對齊 */\r\n}\r\n\r\nbutton {\r\n  outline: none;\r\n}\r\n\r\n.problem-detail button:focus {\r\n  outline: 2px solid #ff9900;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .problem-detail {\r\n    width: 95%;\r\n    padding: 16px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .close-btn {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .code-block {\r\n    font-size: 12px;\r\n    max-height: 300px; /* 限制程式碼區塊高度 */\r\n  }\r\n}\r\n</style>\r\n","import script from \"./FibonacciSequences.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./FibonacciSequences.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./FibonacciSequences.vue?vue&type=style&index=0&id=27e9fcf6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-27e9fcf6\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_defineComponent","__name","setup","__props","onMounted","Prism","codeString","ref","testCodeString","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","onClick","$event","$emit","_createTextVNode","_toDisplayString","value","__exports__"],"sourceRoot":""}