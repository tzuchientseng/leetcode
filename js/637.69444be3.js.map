{"version":3,"file":"js/637.69444be3.js","mappings":"6MAGA,MAAMA,EAAa,CAAEC,MAAO,kBACtBC,EAAa,CAAED,MAAO,cACtBE,EAAa,CAAEF,MAAO,uBACtBG,EAAa,CAAEH,MAAO,cACtBI,EAAa,CAAEJ,MAAO,uBAM5B,OAA4BK,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,mBACRC,KAAAA,CAAMC,ICqBRC,EAAAA,EAAAA,KAAU,KACRC,IAAAA,cAAoB,IAGtB,MAAMC,GAAaC,EAAAA,EAAAA,IAAI,ihCA+BjBC,GAAiBD,EAAAA,EAAAA,IAAI,mIDf3B,MAAO,CAACE,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAOlB,EAAY,EAC3DmB,EAAAA,EAAAA,IAAoB,SAAU,CAC5BlB,MAAO,YACPmB,QAASJ,EAAO,KAAOA,EAAO,GAAMK,GAAiBN,EAAKO,MAAM,WAC/D,KACHN,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,gCAAiC,IAC3FH,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,IAAK,CACjDI,KAAM,4FACNC,OAAQ,UACP,gBAAiB,IACpBR,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,IAAK,KAAM,EACvDA,EAAAA,EAAAA,IAAoB,SAAU,KAAM,QACpCM,EAAAA,EAAAA,IAAiB,sDACf,IACJT,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,cAAe,KACzEA,EAAAA,EAAAA,IAAoB,MAAOjB,EAAY,CACrCc,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,YAC3CN,EAAAA,EAAAA,IAAoB,OAAQhB,GAAYuB,EAAAA,EAAAA,IAAiBd,EAAWe,OAAQ,GAC5EX,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,aAE7CT,EAAO,KAAOA,EAAO,IAAKG,EAAAA,EAAAA,IAAoB,KAAM,KAAM,cAAe,KACzEA,EAAAA,EAAAA,IAAoB,MAAOf,EAAY,CACrCY,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,YAC3CN,EAAAA,EAAAA,IAAoB,OAAQd,GAAYqB,EAAAA,EAAAA,IAAiBZ,EAAea,OAAQ,GAChFX,EAAO,KAAOA,EAAO,IAAKS,EAAAA,EAAAA,IAAiB,eAIjD,I,UE/EA,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://leetcode/./src/components/problems/LongestSubstring.vue?7ebb","webpack://leetcode/./src/components/problems/LongestSubstring.vue","webpack://leetcode/./src/components/problems/LongestSubstring.vue?9fbe"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"problem-detail\" }\nconst _hoisted_2 = { class: \"code-block\" }\nconst _hoisted_3 = { class: \"language-javascript\" }\nconst _hoisted_4 = { class: \"test-block\" }\nconst _hoisted_5 = { class: \"language-javascript\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport Prism from 'prismjs';\r\n\r\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'LongestSubstring',\n  setup(__props) {\n\r\nonMounted(() => {\r\n  Prism.highlightAll(); // 啟用語法高亮\r\n});\r\n\r\nconst codeString = ref(`\r\n/*\r\n    Time complexity: O(n) - Here, n is the length of the string s.\r\n    Space complexity: O(min(m, n)) - Here, m is the size of the character set, and n is the length of the string s.\r\n*/\r\n\r\nconst lengthOfLongestSubstring = (str: string): number => {\r\n    const n: number = str.length;\r\n    let maxLength = 0;\r\n\r\n    // Map to store the most recent index of each character (Map -> [X: str[index], Y: index])\r\n    const charIndexMap = new Map<string, number>();\r\n\r\n    // \"start\" is the beginning of the current substring\r\n    for (let end = 0, start = 0; end < n; end++) {\r\n        if (charIndexMap.has(str[end])) {\r\n            // Move \"start\" to the right of the last occurrence of the character\r\n            start = Math.max(charIndexMap.get(str[end])! + 1, start);\r\n        }\r\n\r\n        // Update the maximum length of the substring\r\n        maxLength = Math.max(maxLength, end - start + 1);\r\n\r\n        // Record the current index of the character\r\n        charIndexMap.set(str[end], end);\r\n    }\r\n\r\n    return maxLength;\r\n};\r\n`);\r\n\r\nconst testCodeString = ref(`\r\nconsole.log(lengthOfLongestSubstring(\"abcabcbb\")); // Output: 3\r\nconsole.log(lengthOfLongestSubstring(\"bbbbb\")); // Output: 1`);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      class: \"close-btn\",\n      onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.$emit('close')))\n    }, \"×\"),\n    _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"3_Longest Substring (medium)\", -1)),\n    _cache[6] || (_cache[6] = _createElementVNode(\"a\", {\n      href: \"https://leetcode.com/problems/longest-substring-without-repeating-characters/description/\",\n      target: \"_blank\"\n    }, \" leetcode_3 \", -1)),\n    _cache[7] || (_cache[7] = _createElementVNode(\"p\", null, [\n      _createElementVNode(\"strong\", null, \"問題:\"),\n      _createTextVNode(\" 找出最長無重複字符的子字串 給定一個字串 str，找出其中不包含重複字符的最長子字串的長度。 \")\n    ], -1)),\n    _cache[8] || (_cache[8] = _createElementVNode(\"h3\", null, \"-- 我的解答 --\", -1)),\n    _createElementVNode(\"pre\", _hoisted_2, [\n      _cache[1] || (_cache[1] = _createTextVNode(\"      \")),\n      _createElementVNode(\"code\", _hoisted_3, _toDisplayString(codeString.value), 1),\n      _cache[2] || (_cache[2] = _createTextVNode(\"\\n    \"))\n    ]),\n    _cache[9] || (_cache[9] = _createElementVNode(\"h3\", null, \"-- 測試用例 --\", -1)),\n    _createElementVNode(\"pre\", _hoisted_4, [\n      _cache[3] || (_cache[3] = _createTextVNode(\"      \")),\n      _createElementVNode(\"code\", _hoisted_5, _toDisplayString(testCodeString.value), 1),\n      _cache[4] || (_cache[4] = _createTextVNode(\"\\n    \"))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"problem-detail\">\r\n    <!-- 關閉按鈕 -->\r\n    <button class=\"close-btn\" @click=\"$emit('close')\">&times;</button>\r\n\r\n    <!-- 題目標題 -->\r\n    <h2>3_Longest Substring (medium)</h2>\r\n    <a href=\"https://leetcode.com/problems/longest-substring-without-repeating-characters/description/\" target=\"_blank\">\r\n      leetcode_3\r\n    </a>\r\n\r\n    <!-- 題目敘述 -->\r\n    <p>\r\n      <strong>問題:</strong>\r\n      找出最長無重複字符的子字串\r\n      給定一個字串 str，找出其中不包含重複字符的最長子字串的長度。\r\n    </p>\r\n\r\n    <!-- 我的解答 -->\r\n    <h3>-- 我的解答 --</h3>\r\n    <pre class=\"code-block\">\r\n      <code class=\"language-javascript\">{{ codeString }}</code>\r\n    </pre>\r\n\r\n    <!-- 測試用例 -->\r\n    <h3>-- 測試用例 --</h3>\r\n    <pre class=\"test-block\">\r\n      <code class=\"language-javascript\">{{ testCodeString }}</code>\r\n    </pre>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport Prism from 'prismjs';\r\n\r\nonMounted(() => {\r\n  Prism.highlightAll(); // 啟用語法高亮\r\n});\r\n\r\nconst codeString = ref(`\r\n/*\r\n    Time complexity: O(n) - Here, n is the length of the string s.\r\n    Space complexity: O(min(m, n)) - Here, m is the size of the character set, and n is the length of the string s.\r\n*/\r\n\r\nconst lengthOfLongestSubstring = (str: string): number => {\r\n    const n: number = str.length;\r\n    let maxLength = 0;\r\n\r\n    // Map to store the most recent index of each character (Map -> [X: str[index], Y: index])\r\n    const charIndexMap = new Map<string, number>();\r\n\r\n    // \"start\" is the beginning of the current substring\r\n    for (let end = 0, start = 0; end < n; end++) {\r\n        if (charIndexMap.has(str[end])) {\r\n            // Move \"start\" to the right of the last occurrence of the character\r\n            start = Math.max(charIndexMap.get(str[end])! + 1, start);\r\n        }\r\n\r\n        // Update the maximum length of the substring\r\n        maxLength = Math.max(maxLength, end - start + 1);\r\n\r\n        // Record the current index of the character\r\n        charIndexMap.set(str[end], end);\r\n    }\r\n\r\n    return maxLength;\r\n};\r\n`);\r\n\r\nconst testCodeString = ref(`\r\nconsole.log(lengthOfLongestSubstring(\"abcabcbb\")); // Output: 3\r\nconsole.log(lengthOfLongestSubstring(\"bbbbb\")); // Output: 1`);\r\n</script>\r\n\r\n<style scoped>\r\n.problem-detail {\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgb(65, 64, 64);\r\n  padding: 24px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);\r\n  width: 70%;\r\n  max-width: 90%;\r\n  color: #f1f1f1;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  overflow-y: auto;\r\n  max-height: 90vh;\r\n}\r\n\r\nh2 {\r\n  font-size: 20px;\r\n  margin-bottom: 0px;\r\n  color: #e67e22;\r\n}\r\n\r\np {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  margin: 10px;\r\n}\r\n\r\nh3 {\r\n  font-size: 16px;\r\n  margin-top: 10px;\r\n  color: #ff9900;\r\n}\r\n\r\na {\r\n  color: #ff9900;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  transition: color 0.3s ease, text-shadow 0.3s ease;\r\n}\r\n\r\na:hover {\r\n  color: #ffcc00;\r\n  text-shadow: 0 0 8px #ffcc00;\r\n}\r\n\r\na:active {\r\n  color: #ffaa00;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 28px;\r\n  outline: none;\r\n  cursor: pointer;\r\n  color: #ff5555;\r\n  transition: transform 0.2s ease, color 0.2s ease;\r\n}\r\n\r\n.close-btn:hover {\r\n  color: #ff0000;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.code-block {\r\n  border-radius: 10px;\r\n  white-space: pre-wrap;\r\n  font-family: 'Courier New', monospace;\r\n  /* font-family: 'Fira Code', 'Courier New', monospace; */\r\n  max-height: 500px; /* 限制程式碼區塊高度 */\r\n  color: #f8f8f2;\r\n  font-size: 14px;\r\n  overflow-x: auto; /* 水平滾軸 */\r\n  overflow-y: auto; /* 垂直滾軸 */\r\n  border: 1px solid #444;\r\n  text-align: left; /* 確保程式碼區塊靠左對齊 */\r\n}\r\n\r\n/* 美化 code-block 滾動條 */\r\n.code-block::-webkit-scrollbar {\r\n  width: 6px; /* 控制滾動條寬度 */\r\n  height: 6px; /* 控制水平滾動條寬度 */\r\n}\r\n\r\n.code-block::-webkit-scrollbar-track {\r\n  background: #1e1e2f; /* 滾動條背景色 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.code-block::-webkit-scrollbar-thumb {\r\n  background: #ff9900; /* 滾動條滑塊顏色 */\r\n  border-radius: 10px;\r\n}\r\n\r\n.code-block::-webkit-scrollbar-thumb:hover {\r\n  background: #ffcc00; /* 滑鼠懸停時變亮 */\r\n}\r\n\r\n.test-block {\r\n  border-radius: 10px;\r\n  white-space: pre-wrap;\r\n  font-family: 'Courier New', monospace;\r\n  /* font-family: 'Fira Code', 'Courier New', monospace; */\r\n  max-height: 100px; /* 限制程式碼區塊高度 */\r\n  color: #f8f8f2;\r\n  font-size: 14px;\r\n  overflow-x: auto; /* 水平滾軸 */\r\n  overflow-y: auto; /* 垂直滾軸 */\r\n  border: 1px solid #444;\r\n  text-align: left; /* 確保程式碼區塊靠左對齊 */\r\n}\r\n\r\n/* 美化化滾動條樣式 */\r\n.test-block::-webkit-scrollbar {\r\n  width: 9px;\r\n  height: 9px;\r\n}\r\n\r\n.test-block::-webkit-scrollbar-track {\r\n  background: #1e1e2f;\r\n  border-radius: 10px;\r\n}\r\n\r\n.test-block::-webkit-scrollbar-thumb {\r\n  background: #1a6cb9;\r\n  border-radius: 10px;\r\n  border: 2px solid #1e1e2f;\r\n}\r\n\r\n.test-block::-webkit-scrollbar-thumb:hover {\r\n  background: #11d3e0;\r\n}\r\n\r\npre {\r\n  margin: 0;\r\n  text-align: left; /* 確保 pre 區塊內的文字靠左對齊 */\r\n}\r\n\r\nbutton {\r\n  outline: none;\r\n}\r\n\r\n.problem-detail button:focus {\r\n  outline: 2px solid #ff9900;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n  .problem-detail {\r\n    width: 95%;\r\n    padding: 16px;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .close-btn {\r\n    font-size: 24px;\r\n  }\r\n\r\n  .code-block {\r\n    font-size: 12px;\r\n    max-height: 300px; /* 限制程式碼區塊高度 */\r\n  }\r\n  .test-block {\r\n    font-size: 12px;\r\n  } \r\n}\r\n</style>\r\n","import script from \"./LongestSubstring.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./LongestSubstring.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./LongestSubstring.vue?vue&type=style&index=0&id=e0f885b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e0f885b8\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_defineComponent","__name","setup","__props","onMounted","Prism","codeString","ref","testCodeString","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","onClick","$event","$emit","href","target","_createTextVNode","_toDisplayString","value","__exports__"],"sourceRoot":""}